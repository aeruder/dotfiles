#!/bin/bash

# DRY_RUN=1

verbose() {
   echo CMD: "$@" >&2
   "$@"
}

host="$1"

if [ -z "$host" ]; then
	echo "Usage: $0 <host>" >&2
	exit 1
fi

dir="`dirname "$0"`"
filterfile="$dir"/"$host".rules
destdir=/external/backups/"$host"
date="`date +"%Y%m%d"`"
if [ "$DRY_RUN" = 1 ]; then
    extra_options=(--dry-run)
else
    extra_options=()
fi
options=(--recursive --links --perms --times --group --owner
         --devices --specials --inplace --delete --delete-excluded --compress
         --stats --verbose -e ssh)

if ! [ -d "$destdir" ]; then
    echo "$destdir doesn't exist" >&2
    exit 1
fi
if ! [ -e "$filterfile" ]; then
    filterfile="$dir"/std.rules
fi

uid="`id -u`"

if [ "$uid" = 0 ]; then
    cmd=(rsync)
else
    cmd=(sudo rsync)
fi

if ! [ -e "$filterfile" ]; then
    echo "$filterfile doesn't exist" >&2
    exit 1
fi

ret=0
verbose "${cmd[@]}" "${options[@]}" "${extra_options[@]}" \
    --filter="merge $filterfile" backup-"$host":/ "$destdir" || ret=1
trysnap="$destdir.$date"
i=0
while true ; do
    if [ -e "$trysnap" ]; then
        trysnap="$destdir.$date.`printf "%03d" $i`"
        i=$((i+1))
    else
        break
    fi
done
cmd=(btrfs subvolume snapshot -r "$destdir" "$trysnap")
if [ "$DRY_RUN" = 1 ]; then
    echo Would run "${cmd[@]}"
else
    verbose "${cmd[@]}" || ret=1
fi

exit "$ret"
