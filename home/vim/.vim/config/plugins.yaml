---

# PLUGINS
# ==========================================

# Startup
# -------

- repo: Shougo/dein.vim
- repo: rafi/awesome-vim-colorschemes
- repo: thinca/vim-localrc
- repo: itchyny/vim-parenmatch
- repo: tpope/vim-vinegar
- repo: tpope/vim-unimpaired
- repo: mhinz/vim-signify
- repo: editorconfig/editorconfig-vim
  hook_add: |
    let g:EditorConfig_core_mode = "python_external"
- repo: itchyny/vim-cursorword
  hook_add: |
    autocmd MyAutoCmd FileType denite,qf,nerdtree let b:cursorword=0
    autocmd MyAutoCmd InsertEnter * let b:cursorword=0
    autocmd MyAutoCmd InsertLeave * let b:cursorword=1
- repo: vim-airline/vim-airline
  hook_add: |
    let g:airline_extensions = []
    execute 'source' PJ(g:vim_pconfigdir, "airline.vim")
- repo: tommcdo/vim-exchange

# Autocomplete stuff, wait until we start editing a file
- repo: Shougo/deoplete.nvim
  if: has('nvim') && g:vimrc_profile >= 1
  on_event: InsertEnter
  hook_source: execute 'source' PJ(g:vim_pconfigdir, "deoplete.vim")
  depends:
    - ultisnips
- repo: honza/vim-snippets
  lazy: 1
- repo: SirVer/ultisnips
  depends: vim-snippets
  lazy: 1

# Lazy loading
# ------------

# Some filetype specific ones
- repo: pearofducks/ansible-vim
  on_ft: ansible
- repo: hail2u/vim-css3-syntax
  on_ft: css
- repo: othree/csscomplete.vim
  on_ft: css
- repo: groenewege/vim-less
  on_ft: less
- repo: mitsuhiko/vim-jinja
  on_ft:
    - htmljinja
    - jinja
- repo: mustache/vim-mustache-handlebars
  on_ft: html
- repo: othree/html5.vim
  on_ft: html
  hook_add: |
    let g:html5_event_handler_attributes_complete = 0
    let g:html5_rdfa_attributes_complete = 0
    let g:html5_microdata_attributes_complete = 0
    let g:html5_aria_attributes_complete = 0
- repo: plasticboy/vim-markdown
  on_ft: markdown
  hook_source: |
    let g:vim_markdown_initial_foldlevel = 5
    let g:vim_markdown_new_list_item_indent = 2
    let g:vim_markdown_frontmatter = 1
    let g:vim_markdown_conceal = 0
- repo: rhysd/vim-gfm-syntax
  depends: vim-markdown
  on_ft: markdown
  hook_source: |
    let g:gfm_syntax_enable_always = 0
    let g:gfm_syntax_highlight_emoji = 0
    let g:gfm_syntax_enable_filetypes = ['markdown']
- repo: pangloss/vim-javascript
  on_ft: javascript
- repo: othree/jspc.vim
  on_ft: javascript
- repo: MaxMEllon/vim-jsx-pretty
  on_ft: javascript
- repo: heavenshell/vim-jsdoc
  on_ft: javascript
- repo: moll/vim-node
  on_ft: javascript
- repo: elzr/vim-json
  on_ft: json
- repo: fatih/vim-go
  on_ft: go
  hook_source: |
    let g:go_def_mapping_enabled = 0
    let g:go_loaded_gosnippets = 1
    let g:go_snippet_engine = 'neosnippet'
    let g:go_highlight_extra_types = 1
    let g:go_highlight_operators = 1
- repo: tbastos/vim-lua
  on_ft: lua
- repo: vim-python/python-syntax
  on_ft: python
- repo: Vimjas/vim-python-pep8-indent
  on_ft: python
- repo: python_match.vim
  on_ft: python
- repo: raimon49/requirements.txt.vim
  on_ft: requirements
- repo: StanAngeloff/php.vim
  on_ft: php
- repo: osyo-manga/vim-monster
  on_ft: ruby
- repo: toyamarinyon/vim-swift
  on_ft: swift
- repo: vim-jp/syntax-vim-ex
  on_ft: vim
- repo: m2mdas/phpcomplete-extended
  on_ft: php
  on_i: 1
  hook_source: let g:phpcomplete_extended_use_default_mapping = 0
- repo: chrisbra/csv.vim
  on_ft: csv
- repo: tmux-plugins/vim-tmux
  on_ft: tmux
- repo: cespare/vim-toml
  on_ft: toml
- repo: PotatoesMaster/i3-vim-syntax
  on_ft: i3
- repo: dag/vim-fish
  on_ft: fish
- repo: ekalinin/Dockerfile.vim
  on_ft:
    - Dockerfile
    - docker-compose
- repo: jstrater/mpvim
  on_ft: portfile
- repo: tpope/vim-git
  on_ft:
    - gitcommit
    - gitrebase
    - gitconfig
- repo: robbles/logstash.vim
  on_ft: logstash
- repo: andreshazard/vim-logreview
  on_ft: logreview
- repo: exu/pgsql.vim
  on_ft: pgsql
- repo: othree/nginx-contrib-vim
  on_ft: nginx
- repo: IN3D/vim-raml
  on_ft: raml
- repo: vim-perl/vim-perl
  on_ft: perl
  hook_source: |
    let perl_include_pod = 0
- repo: vim-ruby/vim-ruby
  on_ft: ruby
- repo: tpope/vim-rails
  on_ft: ruby
- repo: aeruder/vimoutliner
  on_ft: votl

# others
- repo: tpope/vim-fugitive
  on_cmd:
    - Gcd
    - Glcd
    - Glog
    - Gamend
    - Git
    - Gcommit
    - Gblame
    - Gstatus
    - Gdiff
    - Gbrowse
    - Gwrite
    - Gread
  hook_post_source: |
    call airline#extensions#branch#init({})
    MyAirlineRefresh
- repo: tpope/vim-abolish
  on_cmd:
    - S
- repo: kana/vim-textobj-user
  on_func: textobj#user#
- repo: kana/vim-operator-user
  lazy: 1
- repo: kana/vim-operator-replace
  depends: vim-operator-user
  on_map:
    vnx: <Plug>
- repo: rhysd/vim-operator-surround
  depends:
    - vim-operator-user
    - vim-textobj-multiblock
  on_map:
    vnx: <Plug>
- repo: haya14busa/vim-operator-flashy
  depends: vim-operator-user
  on_map:
    nx: <Plug>
- repo: bkad/CamelCaseMotion
  on_map:
    nox: <Plug>CamelCaseMotion
- repo: terryma/vim-expand-region
  on_map:
    x: <Plug>
- repo: AndrewRadev/sideways.vim
  on_map:
    ox: <Plug>Sideways
- repo: AndrewRadev/splitjoin.vim
  on_map:
    n: <plug>Splitjoin
- repo: AndrewRadev/linediff.vim
  on_cmd: Linediff
- repo: AndrewRadev/dsf.vim
  on_map:
    n: <Plug>Dsf
  hook_add: |
    let g:dsf_no_mappings = 1
- repo: osyo-manga/vim-textobj-multiblock
  depends: vim-textobj-user
  on_map:
    ox: <Plug>
  hook_add: |
    let g:textobj_multiblock_no_default_key_mappings = 1
- repo: kana/vim-textobj-function
  depends: vim-textobj-user
  on_map:
    ox: <Plug>
  hook_add: |
    let g:textobj_function_no_default_key_mappings = 1
- repo: thinca/vim-textobj-between
  depends: vim-textobj-user
  on_map:
    ox: <Plug>
  hook_add: |
    let g:textobj_between_no_default_key_mappings = 1
- repo: kana/vim-textobj-entire
  depends: vim-textobj-user
  on_map:
    ox: <Plug>
  hook_add: |
    let g:textobj_entire_no_default_key_mappings = 1
- repo: lucapette/vim-textobj-underscore
  depends: vim-textobj-user
  on_map:
    ox: <Plug>
  hook_add: |
    let g:textobj_underscore_no_default_key_mappings = 1
- repo: godlygeek/tabular
  on_cmd:
    - GTabularize
    - Tabularize
    - AddTabularPipeline
    - AddTabularPattern
  hook_post_source: |
    execute 'source '.PJ(g:vim_pconfigdir, "tabular.post.vim")
- repo: tpope/vim-eunuch
  on_cmd:
    - Unlink
    - Remove
    - Move
    - Rename
    - Chmod
    - Mkdir
    - Find
    - Locate
    - SudoEdit
    - SudoWrite
    - Wall
- repo: tpope/vim-repeat
  on_func: repeat#
- repo: qpkorr/vim-bufkill
  on_cmd:
    - BufKillA
    - BufKillB
    - BufKillF
    - BufKillUN
    - BufKillD
    - BufKillW
    - BufKillUNDO
  hook_source: |
    let g:BufKillCreateMappings = 0
    let g:BufKillCommandPrefix = "BufKill"
- repo: mbbill/undotree
  on_cmd:
    - UndotreeToggle
    - UndotreeHide
    - UndotreeShow
    - UndotreeFocus
- repo: artnez/vim-wipeout
  on_cmd: Wipeout
- repo: mtth/scratch.vim
  on_source: let g:scratch_no_mappings = 1
  on_cmd:
    - Scratch
    - ScratchInsert
    - ScratchSelection
    - ScratchPreview
- repo: rhysd/accelerated-jk
  on_map:
    n: <Plug>
- repo: ludovicchabant/vim-gutentags
  if: executable('ctags') && g:vimrc_profile >= 1
  on_path: .*
  hook_add: |
    let g:gutentags_cache_dir = PJ(g:vim_cachedir, "tags")
    let g:gutentags_generate_on_write = 1
    let g:gutentags_generate_on_missing = 0
    let g:gutentags_generate_on_new = 0
- repo: Shougo/neco-vim
  on_source: deoplete.nvim
- repo: Shougo/neco-syntax
  on_source: deoplete.nvim
- repo: gregsexton/gitv
  depends: vim-fugitive
  on_cmd: Gitv
- repo: haya14busa/vim-asterisk
  on_map:
    nv: <Plug>
- repo: tpope/vim-commentary
  on_map: <Plug>Commentary
- repo: rhysd/committia.vim
  on_path: COMMIT_EDITMSG
  hook_source: let g:committia_min_window_width = 70
- repo: majutsushi/tagbar
  if: empty($VIM_MINIMAL)
  on_cmd: TagbarToggle
  hook_source: |
    let g:tagbar_width = 40
    if executable('jsctags')
      let g:tagbar_type_javascript = { 'ctagsbin': 'jsctags' }
    endif

# ==========================================
# Denite
# ------
- repo: Shougo/denite.nvim
  if: has('nvim')
  on_cmd: Denite
  on_func: denite#
  hook_source: |
    execute 'source' PJ(g:vim_pconfigdir, "denite.vim")
  hook_post_source: |
    execute 'source' PJ(g:vim_pconfigdir, "denite.post.vim")

- repo: chemzqm/unite-location
  on_source: denite.nvim

#  vim: set ts=2 sw=2 tw=80 et :
